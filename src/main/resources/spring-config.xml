<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context.xsd
    	http://www.springframework.org/schema/aop
	    http://www.springframework.org/schema/aop/spring-aop.xsd">

    <import resource="classpath:spring-db.xml"/>

    <context:property-placeholder location="classpath:config/local.properties" ignore-unresolvable="true"/>

    <aop:aspectj-autoproxy/>
    <bean class="ua.nure.melnyk.aspect.LoggingAspect" p:configBean-ref="configBean"/>

    <context:component-scan base-package="ua.nure.melnyk"/>
    <context:annotation-config/>

    <alias name="userServiceImpl" alias="userService"/>
    <alias name="productServiceImpl" alias="productService"/>
    <alias name="userAccountServiceImpl" alias="userAccountService"/>
    <alias name="marketFacadeImpl" alias="marketFacade"/>

    <bean id="userServiceImpl" class="ua.nure.melnyk.service.impl.UserServiceImpl">
        <property name="userDao" ref="storageUserDao"/>
    </bean>

    <bean id="productServiceImpl" class="ua.nure.melnyk.service.impl.ProductServiceImpl">
        <property name="productDao" ref="storageProductDao"/>
    </bean>

    <bean id="userAccountServiceImpl" class="ua.nure.melnyk.service.impl.UserAccountServiceImpl">
        <property name="userAccountDao" ref="jdbcUserAccountDao"/>
    </bean>

    <bean id="marketFacadeImpl" class="ua.nure.melnyk.facade.impl.MarketFacadeImpl">
        <constructor-arg name="productService" ref="productService"/>
        <constructor-arg name="userService" ref="userService"/>
        <constructor-arg name="userAccountService" ref="userAccountService"/>
    </bean>


    <!-- this bean must not be lazily initialized if the exporting is to happen -->
    <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
        <property name="beans">
            <map>
                <entry key="labBeans:name=configBean" value-ref="configBean"/>
            </map>
        </property>
    </bean>

    <bean id="configBean" class="ua.nure.melnyk.mbean.Config" p:shouldLog="false"/>

    <bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller">
        <property name="mappingLocation" value="classpath:/config/mapping.xml"/>
    </bean>

    <bean id="dbProductLoader" class="ua.nure.melnyk.storage.DbProductLoader" init-method="loadProducts"/>

</beans>